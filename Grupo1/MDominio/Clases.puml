@startuml Clases

class Batalla{
    +Personaje Heroe
    +Personaje[] Enemigo     
    +int turno

    Batalla(heroe, enemigo)

    void ImprimirInterfaz()
}

abstract Personaje{
    +int vidaActual
    +int vidaMaxima
    +Arma[] armas
    +int armasEquipada
    +Desmayo desmayo
    +String[] sprite

    Personaje(vidaMaxima, armas, sprite)

    void RecibirDaño(int daño)
    void Desmayar()
}

class Arma {
    +String nombre
    +int daño
    +int durabilidad
    +float probabilidadAcertar
    +float probabilidadDesgaste

    Arma(nombre, daño, probAcertar, probDesgaste)

    void Desgastar()
}

class Desmayo{
    +float porcentajeDesmayo
    +int recuperacionDesmayo
    +bool puedeDesmayarse
}

class Vampiro{
}   

class Heroe{
    +bool defendiendo  
    +Pocion[] pociones

    Heroe(pociones)

    void UsarPocion()
    void Defender()
}

class Pocion{
    +int vidaARecuperar

    Pocion(vidaARecuperar)
}

class RecuadroPersonaje {
    +String[] sprite
    +int vida
    +String Nombre

    RecuadroPersonaje(sprite, vida, nombre)

    void ImprimirPersonaje()
}

class MenuAcciones {
    +Arma[] armas
    +String[] acciones

    MenuAcciones(armas, acciones)
   
    void ImprimirAcciones()
    void ImprimirArmas()
    
}

class Calculadora {
    int calcularDaño(Arma arma)
    bool puedeDefenderse(float probabilidad)
}

Batalla o-l-> RecuadroPersonaje : Muestra >
Batalla o-l-> MenuAcciones : Muestra >
Batalla o-r-> Calculadora : Consulta >

Personaje <|-u- Heroe
Personaje <|-u- Vampiro

Batalla *-d-> Heroe : Lucha <
Batalla *-d-> Vampiro : Lucha <

Heroe -d-> Pocion : Usa >

Personaje o-r-> Arma : Usa >
Personaje -l-> Desmayo : Puede tener >



@enduml